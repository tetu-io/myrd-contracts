{
  "address": "0xc68802De8345B288cE156034C89cB9ec953dad28",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gov",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_payToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_end",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "MIN_CLAIMING_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SALE_TOTAL_AMOUNT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allowClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allowToClaim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "bought",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "bought",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnNotSold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "end",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "payToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "setupTokenToSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "start",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenToSale",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x40a7b5a5e4b2043ae0310f89f21d284b682f663ba8fb5cc32eedecc3e3a14278",
  "receipt": {
    "to": null,
    "from": "0xbbbbb8C4364eC2ce52c59D2Ed3E56F307E529a94",
    "contractAddress": "0xc68802De8345B288cE156034C89cB9ec953dad28",
    "transactionIndex": 0,
    "gasUsed": "754706",
    "logsBloom": "0x
    "blockHash": "0x16a5234bf227262062024629bb009d0954e139d430335ebebec6b0a7225ed267",
    "transactionHash": "0x40a7b5a5e4b2043ae0310f89f21d284b682f663ba8fb5cc32eedecc3e3a14278",
    "logs": [],
    "blockNumber": 15038933,
    "cumulativeGasUsed": "754706",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xBe68f08bCa20e2a413D425c2F1aD7a43E1b67B67",
    "0xd3DCe716f3eF535C5Ff8d041c1A41C3bd89b97aE",
    "200000",
    1743004800,
    1743350400
  ],
  "numDeployments": 1,
  "solcInputHash": "c58a764a72eaf5c3059cf0b59a44410a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gov\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_payToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_end\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"MIN_CLAIMING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SALE_TOTAL_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowToClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"bought\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bought\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnNotSold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"end\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"setupTokenToSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenToSale\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burnNotSold()\":{\"details\":\"governance can call after the sale end + 1 month\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"MIN_CLAIMING_PERIOD()\":{\"notice\":\"burnNotSold cannot be called if less than 30 days passed since the sale end\"},\"burnNotSold()\":{\"notice\":\"Burn ALL tokens from balance (users won't be able to claim tokens after that)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/Sale.sol\":\"Sale\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":150},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"contracts/interfaces/IERC20Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.23;\\r\\n\\r\\ninterface IERC20Burnable {\\r\\n\\r\\n  function burn(uint256 value) external;\\r\\n\\r\\n  function burnFrom(address account, uint256 value) external;\\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0xcbf249e6222e78e362991a0189afa73e8604053fd302bc74e351656303d62b65\",\"license\":\"MIT\"},\"contracts/token/Sale.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.23;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"../interfaces/IERC20Burnable.sol\\\";\\n\\ncontract Sale {\\n\\n  uint public constant SALE_TOTAL_AMOUNT = 4_000_000e18;\\n  /// @notice burnNotSold cannot be called if less than 30 days passed since the sale end\\n  uint public constant MIN_CLAIMING_PERIOD = 30 days;\\n\\n  address public immutable governance;\\n  address public immutable payToken;\\n  uint public immutable price;\\n  uint public immutable start;\\n  uint public immutable end;\\n\\n  address public tokenToSale;\\n  uint public sold;\\n  mapping(address user => uint bought) public bought;\\n  bool public allowToClaim = false;\\n\\n  constructor(\\n    address _gov,\\n    address _payToken,\\n    uint _price,\\n    uint _start,\\n    uint _end\\n  ) {\\n    require(_gov != address(0), \\\"zero gov\\\");\\n    require(_payToken != address(0), \\\"zero pay\\\");\\n    require(_price > 0, \\\"zero price\\\");\\n    require(_start > block.timestamp, \\\"incorrect start\\\");\\n    require(_end > _start + 1 days, \\\"incorrect end\\\");\\n\\n    governance = _gov;\\n    payToken = _payToken;\\n    price = _price;\\n    start = _start;\\n    end = _end;\\n  }\\n\\n  // anyone can call, assume to be called during the token deploy\\n  function setupTokenToSale(address token) external {\\n    require(token != address(0), \\\"zero token\\\");\\n    require(tokenToSale == address(0), \\\"already\\\");\\n    require(IERC20(token).balanceOf(address(this)) == SALE_TOTAL_AMOUNT, \\\"incorrect supply\\\");\\n\\n    tokenToSale = token;\\n  }\\n\\n  // after the sale ended we need to allow to claim in the same moment when create the token pool\\n  function allowClaim() external {\\n    require(msg.sender == governance, \\\"not allowed\\\");\\n    allowToClaim = true;\\n  }\\n\\n  /// @notice Burn ALL tokens from balance (users won't be able to claim tokens after that)\\n  /// @dev governance can call after the sale end + 1 month\\n  function burnNotSold() external {\\n    require(msg.sender == governance, \\\"not allowed\\\");\\n\\n    address _token = tokenToSale;\\n    require(_token != address(0) && block.timestamp > end, 'not ended');\\n    require(block.timestamp >= end + MIN_CLAIMING_PERIOD, '< 1 month since end');\\n\\n    uint toBurn = IERC20(_token).balanceOf(address(this));\\n    require(toBurn != 0, 'nothing to burn');\\n    IERC20Burnable(_token).burn(toBurn);\\n  }\\n\\n  function buy(uint amount) external {\\n    require(block.timestamp >= start, \\\"Sale is not started yet\\\");\\n    require(block.timestamp < end, \\\"Sale ended\\\");\\n    require(sold + amount <= SALE_TOTAL_AMOUNT, \\\"Too much\\\");\\n\\n    uint totalBought = bought[msg.sender];\\n    require(totalBought + amount <= SALE_TOTAL_AMOUNT / 10, \\\"Too much for user\\\");\\n\\n    uint toSpend = amount * price / 1e18;\\n    require(toSpend > 0, \\\"Zero amount\\\");\\n\\n    sold += amount;\\n    IERC20(payToken).transferFrom(msg.sender, governance, toSpend);\\n    bought[msg.sender] = totalBought + amount;\\n  }\\n\\n  function claim() external {\\n    address _token = tokenToSale;\\n    require(_token != address(0) && block.timestamp >= end, 'sale not ended');\\n    require(allowToClaim, 'not allowed yet');\\n\\n    uint userBought = bought[msg.sender];\\n    require(userBought > 0, 'bought zero');\\n\\n    bought[msg.sender] = 0;\\n    IERC20(_token).transfer(msg.sender, userBought);\\n  }\\n}\\n\",\"keccak256\":\"0x108aa070fbfffa928676577328a4c3feff20e3019b1d8e3081e113dc12a9949b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6101206040526003805460ff191690553480156200001c57600080fd5b5060405162000f6838038062000f688339810160408190526200003f91620001df565b6001600160a01b038516620000865760405162461bcd60e51b81526020600482015260086024820152673d32b9379033b7bb60c11b60448201526064015b60405180910390fd5b6001600160a01b038416620000c95760405162461bcd60e51b81526020600482015260086024820152677a65726f2070617960c01b60448201526064016200007d565b60008311620001085760405162461bcd60e51b815260206004820152600a6024820152697a65726f20707269636560b01b60448201526064016200007d565b4282116200014b5760405162461bcd60e51b815260206004820152600f60248201526e1a5b98dbdc9c9958dd081cdd185c9d608a1b60448201526064016200007d565b6200015a826201518062000232565b81116200019a5760405162461bcd60e51b815260206004820152600d60248201526c1a5b98dbdc9c9958dd08195b99609a1b60448201526064016200007d565b6001600160a01b039485166080529290931660a05260c05260e091909152610100526200025a565b80516001600160a01b0381168114620001da57600080fd5b919050565b600080600080600060a08688031215620001f857600080fd5b6200020386620001c2565b94506200021360208701620001c2565b6040870151606088015160809098015196999198509695945092505050565b808201808211156200025457634e487b7160e01b600052601160045260246000fd5b92915050565b60805160a05160c05160e05161010051610c83620002e56000396000818161027e015281816104970152818161067c0152818161098801526109eb015260008181610244015261061201526000818161021d01526107ab0152600081816101f6015261087d01526000818161017a015281816102b30152818161084e01526109150152610c836000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063667f009411610097578063be9a655511610066578063be9a65551461023f578063d96a094a14610266578063efbe1c1c14610279578063f7281af5146102a057600080fd5b8063667f0094146101d4578063876c00f2146101e757806396336b30146101f1578063a035b1fe1461021857600080fd5b80634d61b58b116100d35780634d61b58b1461015a5780634e71d92d1461016d5780635aa6e67514610175578063667022fd146101b457600080fd5b806302c7e7af146101055780630356783b146101215780630c9a65ac1461012b5780631d6740d31461013d575b600080fd5b61010e60015481565b6040519081526020015b60405180910390f35b6101296102a8565b005b61010e6a034f086f3b33b68400000081565b60035461014a9060ff1681565b6040519015158152602001610118565b610129610168366004610b61565b610322565b61012961047f565b61019c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610118565b61010e6101c2366004610b61565b60026020526000908152604090205481565b60005461019c906001600160a01b031681565b61010e62278d0081565b61019c7f000000000000000000000000000000000000000000000000000000000000000081565b61010e7f000000000000000000000000000000000000000000000000000000000000000081565b61010e7f000000000000000000000000000000000000000000000000000000000000000081565b610129610274366004610b91565b610610565b61010e7f000000000000000000000000000000000000000000000000000000000000000081565b61012961090a565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103135760405162461bcd60e51b815260206004820152600b60248201526a1b9bdd08185b1b1bddd95960aa1b60448201526064015b60405180910390fd5b6003805460ff19166001179055565b6001600160a01b0381166103655760405162461bcd60e51b815260206004820152600a6024820152693d32b937903a37b5b2b760b11b604482015260640161030a565b6000546001600160a01b0316156103a85760405162461bcd60e51b8152602060048201526007602482015266616c726561647960c81b604482015260640161030a565b6040516370a0823160e01b81523060048201526a034f086f3b33b684000000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156103f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041d9190610baa565b1461045d5760405162461bcd60e51b815260206004820152601060248201526f696e636f727265637420737570706c7960801b604482015260640161030a565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031680158015906104ba57507f00000000000000000000000000000000000000000000000000000000000000004210155b6104f75760405162461bcd60e51b815260206004820152600e60248201526d1cd85b19481b9bdd08195b99195960921b604482015260640161030a565b60035460ff1661053b5760405162461bcd60e51b815260206004820152600f60248201526e1b9bdd08185b1b1bddd959081e595d608a1b604482015260640161030a565b33600090815260026020526040902054806105865760405162461bcd60e51b815260206004820152600b60248201526a626f75676874207a65726f60a81b604482015260640161030a565b33600081815260026020526040808220919091555163a9059cbb60e01b81526004810191909152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af11580156105e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060b9190610bc3565b505050565b7f000000000000000000000000000000000000000000000000000000000000000042101561067a5760405162461bcd60e51b815260206004820152601760248201527614d85b19481a5cc81b9bdd081cdd185c9d1959081e595d604a1b604482015260640161030a565b7f000000000000000000000000000000000000000000000000000000000000000042106106d65760405162461bcd60e51b815260206004820152600a60248201526914d85b1948195b99195960b21b604482015260640161030a565b6a034f086f3b33b684000000816001546106f09190610bfb565b11156107295760405162461bcd60e51b81526020600482015260086024820152670a8dede40daeac6d60c31b604482015260640161030a565b3360009081526002602052604090205461074f600a6a034f086f3b33b684000000610c14565b6107598383610bfb565b111561079b5760405162461bcd60e51b81526020600482015260116024820152702a37b79036bab1b4103337b9103ab9b2b960791b604482015260640161030a565b6000670de0b6b3a76400006107d07f000000000000000000000000000000000000000000000000000000000000000085610c36565b6107da9190610c14565b90506000811161081a5760405162461bcd60e51b815260206004820152600b60248201526a16995c9bc8185b5bdd5b9d60aa1b604482015260640161030a565b826001600082825461082c9190610bfb565b90915550506040516323b872dd60e01b81523360048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152604482018390527f000000000000000000000000000000000000000000000000000000000000000016906323b872dd906064016020604051808303816000875af11580156108c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ea9190610bc3565b506108f58383610bfb565b33600090815260026020526040902055505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109705760405162461bcd60e51b815260206004820152600b60248201526a1b9bdd08185b1b1bddd95960aa1b604482015260640161030a565b6000546001600160a01b031680158015906109aa57507f000000000000000000000000000000000000000000000000000000000000000042115b6109e25760405162461bcd60e51b81526020600482015260096024820152681b9bdd08195b99195960ba1b604482015260640161030a565b610a0f62278d007f0000000000000000000000000000000000000000000000000000000000000000610bfb565b421015610a545760405162461bcd60e51b81526020600482015260136024820152720f080c481b5bdb9d1a081cda5b98d948195b99606a1b604482015260640161030a565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610a9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abf9190610baa565b905080600003610b035760405162461bcd60e51b815260206004820152600f60248201526e3737ba3434b733903a3790313ab93760891b604482015260640161030a565b604051630852cd8d60e31b8152600481018290526001600160a01b038316906342966c6890602401600060405180830381600087803b158015610b4557600080fd5b505af1158015610b59573d6000803e3d6000fd5b505050505050565b600060208284031215610b7357600080fd5b81356001600160a01b0381168114610b8a57600080fd5b9392505050565b600060208284031215610ba357600080fd5b5035919050565b600060208284031215610bbc57600080fd5b5051919050565b600060208284031215610bd557600080fd5b81518015158114610b8a57600080fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610c0e57610c0e610be5565b92915050565b600082610c3157634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610c0e57610c0e610be556fea2646970667358221220b1a8fcfec21ec6cfba3fb9ecce037ea674f4bb1524a81e94df1b5a4b00e7b46164736f6c63430008170033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c8063667f009411610097578063be9a655511610066578063be9a65551461023f578063d96a094a14610266578063efbe1c1c14610279578063f7281af5146102a057600080fd5b8063667f0094146101d4578063876c00f2146101e757806396336b30146101f1578063a035b1fe1461021857600080fd5b80634d61b58b116100d35780634d61b58b1461015a5780634e71d92d1461016d5780635aa6e67514610175578063667022fd146101b457600080fd5b806302c7e7af146101055780630356783b146101215780630c9a65ac1461012b5780631d6740d31461013d575b600080fd5b61010e60015481565b6040519081526020015b60405180910390f35b6101296102a8565b005b61010e6a034f086f3b33b68400000081565b60035461014a9060ff1681565b6040519015158152602001610118565b610129610168366004610b61565b610322565b61012961047f565b61019c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610118565b61010e6101c2366004610b61565b60026020526000908152604090205481565b60005461019c906001600160a01b031681565b61010e62278d0081565b61019c7f000000000000000000000000000000000000000000000000000000000000000081565b61010e7f000000000000000000000000000000000000000000000000000000000000000081565b61010e7f000000000000000000000000000000000000000000000000000000000000000081565b610129610274366004610b91565b610610565b61010e7f000000000000000000000000000000000000000000000000000000000000000081565b61012961090a565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103135760405162461bcd60e51b815260206004820152600b60248201526a1b9bdd08185b1b1bddd95960aa1b60448201526064015b60405180910390fd5b6003805460ff19166001179055565b6001600160a01b0381166103655760405162461bcd60e51b815260206004820152600a6024820152693d32b937903a37b5b2b760b11b604482015260640161030a565b6000546001600160a01b0316156103a85760405162461bcd60e51b8152602060048201526007602482015266616c726561647960c81b604482015260640161030a565b6040516370a0823160e01b81523060048201526a034f086f3b33b684000000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156103f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041d9190610baa565b1461045d5760405162461bcd60e51b815260206004820152601060248201526f696e636f727265637420737570706c7960801b604482015260640161030a565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031680158015906104ba57507f00000000000000000000000000000000000000000000000000000000000000004210155b6104f75760405162461bcd60e51b815260206004820152600e60248201526d1cd85b19481b9bdd08195b99195960921b604482015260640161030a565b60035460ff1661053b5760405162461bcd60e51b815260206004820152600f60248201526e1b9bdd08185b1b1bddd959081e595d608a1b604482015260640161030a565b33600090815260026020526040902054806105865760405162461bcd60e51b815260206004820152600b60248201526a626f75676874207a65726f60a81b604482015260640161030a565b33600081815260026020526040808220919091555163a9059cbb60e01b81526004810191909152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af11580156105e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060b9190610bc3565b505050565b7f000000000000000000000000000000000000000000000000000000000000000042101561067a5760405162461bcd60e51b815260206004820152601760248201527614d85b19481a5cc81b9bdd081cdd185c9d1959081e595d604a1b604482015260640161030a565b7f000000000000000000000000000000000000000000000000000000000000000042106106d65760405162461bcd60e51b815260206004820152600a60248201526914d85b1948195b99195960b21b604482015260640161030a565b6a034f086f3b33b684000000816001546106f09190610bfb565b11156107295760405162461bcd60e51b81526020600482015260086024820152670a8dede40daeac6d60c31b604482015260640161030a565b3360009081526002602052604090205461074f600a6a034f086f3b33b684000000610c14565b6107598383610bfb565b111561079b5760405162461bcd60e51b81526020600482015260116024820152702a37b79036bab1b4103337b9103ab9b2b960791b604482015260640161030a565b6000670de0b6b3a76400006107d07f000000000000000000000000000000000000000000000000000000000000000085610c36565b6107da9190610c14565b90506000811161081a5760405162461bcd60e51b815260206004820152600b60248201526a16995c9bc8185b5bdd5b9d60aa1b604482015260640161030a565b826001600082825461082c9190610bfb565b90915550506040516323b872dd60e01b81523360048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152604482018390527f000000000000000000000000000000000000000000000000000000000000000016906323b872dd906064016020604051808303816000875af11580156108c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ea9190610bc3565b506108f58383610bfb565b33600090815260026020526040902055505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109705760405162461bcd60e51b815260206004820152600b60248201526a1b9bdd08185b1b1bddd95960aa1b604482015260640161030a565b6000546001600160a01b031680158015906109aa57507f000000000000000000000000000000000000000000000000000000000000000042115b6109e25760405162461bcd60e51b81526020600482015260096024820152681b9bdd08195b99195960ba1b604482015260640161030a565b610a0f62278d007f0000000000000000000000000000000000000000000000000000000000000000610bfb565b421015610a545760405162461bcd60e51b81526020600482015260136024820152720f080c481b5bdb9d1a081cda5b98d948195b99606a1b604482015260640161030a565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610a9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abf9190610baa565b905080600003610b035760405162461bcd60e51b815260206004820152600f60248201526e3737ba3434b733903a3790313ab93760891b604482015260640161030a565b604051630852cd8d60e31b8152600481018290526001600160a01b038316906342966c6890602401600060405180830381600087803b158015610b4557600080fd5b505af1158015610b59573d6000803e3d6000fd5b505050505050565b600060208284031215610b7357600080fd5b81356001600160a01b0381168114610b8a57600080fd5b9392505050565b600060208284031215610ba357600080fd5b5035919050565b600060208284031215610bbc57600080fd5b5051919050565b600060208284031215610bd557600080fd5b81518015158114610b8a57600080fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610c0e57610c0e610be5565b92915050565b600082610c3157634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610c0e57610c0e610be556fea2646970667358221220b1a8fcfec21ec6cfba3fb9ecce037ea674f4bb1524a81e94df1b5a4b00e7b46164736f6c63430008170033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "burnNotSold()": {
        "details": "governance can call after the sale end + 1 month"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "MIN_CLAIMING_PERIOD()": {
        "notice": "burnNotSold cannot be called if less than 30 days passed since the sale end"
      },
      "burnNotSold()": {
        "notice": "Burn ALL tokens from balance (users won't be able to claim tokens after that)"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4107,
        "contract": "contracts/token/Sale.sol:Sale",
        "label": "tokenToSale",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4109,
        "contract": "contracts/token/Sale.sol:Sale",
        "label": "sold",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 4113,
        "contract": "contracts/token/Sale.sol:Sale",
        "label": "bought",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 4116,
        "contract": "contracts/token/Sale.sol:Sale",
        "label": "allowToClaim",
        "offset": 0,
        "slot": "3",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}